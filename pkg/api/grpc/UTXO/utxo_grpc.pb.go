// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             v3.12.4
// source: api/grpc/proto/utxo.proto

package UTXO

import (
	context "context"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	UTXO_ListByAddress_FullMethodName        = "/UTXO/ListByAddress"
	UTXO_GetBlockHeight_FullMethodName       = "/UTXO/GetBlockHeight"
	UTXO_TotalAmountByAddress_FullMethodName = "/UTXO/TotalAmountByAddress"
)

// UTXOClient is the client API for UTXO service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type UTXOClient interface {
	// ListByAddress returns list of UTXO by address
	ListByAddress(ctx context.Context, in *Address, opts ...grpc.CallOption) (*TransactionOutputs, error)
	// GetBlockHeight returns the number of the block last synced with in UTXO storage
	GetBlockHeight(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*GetBlockHeightResponse, error)
	// TotalAmount returns a total amount of unspent outputs by address
	TotalAmountByAddress(ctx context.Context, in *Address, opts ...grpc.CallOption) (*Amount, error)
}

type uTXOClient struct {
	cc grpc.ClientConnInterface
}

func NewUTXOClient(cc grpc.ClientConnInterface) UTXOClient {
	return &uTXOClient{cc}
}

func (c *uTXOClient) ListByAddress(ctx context.Context, in *Address, opts ...grpc.CallOption) (*TransactionOutputs, error) {
	out := new(TransactionOutputs)
	err := c.cc.Invoke(ctx, UTXO_ListByAddress_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *uTXOClient) GetBlockHeight(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*GetBlockHeightResponse, error) {
	out := new(GetBlockHeightResponse)
	err := c.cc.Invoke(ctx, UTXO_GetBlockHeight_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *uTXOClient) TotalAmountByAddress(ctx context.Context, in *Address, opts ...grpc.CallOption) (*Amount, error) {
	out := new(Amount)
	err := c.cc.Invoke(ctx, UTXO_TotalAmountByAddress_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UTXOServer is the server API for UTXO service.
// All implementations must embed UnimplementedUTXOServer
// for forward compatibility
type UTXOServer interface {
	// ListByAddress returns list of UTXO by address
	ListByAddress(context.Context, *Address) (*TransactionOutputs, error)
	// GetBlockHeight returns the number of the block last synced with in UTXO storage
	GetBlockHeight(context.Context, *empty.Empty) (*GetBlockHeightResponse, error)
	// TotalAmount returns a total amount of unspent outputs by address
	TotalAmountByAddress(context.Context, *Address) (*Amount, error)
	mustEmbedUnimplementedUTXOServer()
}

// UnimplementedUTXOServer must be embedded to have forward compatible implementations.
type UnimplementedUTXOServer struct {
}

func (UnimplementedUTXOServer) ListByAddress(context.Context, *Address) (*TransactionOutputs, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListByAddress not implemented")
}
func (UnimplementedUTXOServer) GetBlockHeight(context.Context, *empty.Empty) (*GetBlockHeightResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBlockHeight not implemented")
}
func (UnimplementedUTXOServer) TotalAmountByAddress(context.Context, *Address) (*Amount, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TotalAmountByAddress not implemented")
}
func (UnimplementedUTXOServer) mustEmbedUnimplementedUTXOServer() {}

// UnsafeUTXOServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to UTXOServer will
// result in compilation errors.
type UnsafeUTXOServer interface {
	mustEmbedUnimplementedUTXOServer()
}

func RegisterUTXOServer(s grpc.ServiceRegistrar, srv UTXOServer) {
	s.RegisterService(&UTXO_ServiceDesc, srv)
}

func _UTXO_ListByAddress_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Address)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UTXOServer).ListByAddress(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: UTXO_ListByAddress_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UTXOServer).ListByAddress(ctx, req.(*Address))
	}
	return interceptor(ctx, in, info, handler)
}

func _UTXO_GetBlockHeight_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UTXOServer).GetBlockHeight(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: UTXO_GetBlockHeight_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UTXOServer).GetBlockHeight(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _UTXO_TotalAmountByAddress_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Address)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UTXOServer).TotalAmountByAddress(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: UTXO_TotalAmountByAddress_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UTXOServer).TotalAmountByAddress(ctx, req.(*Address))
	}
	return interceptor(ctx, in, info, handler)
}

// UTXO_ServiceDesc is the grpc.ServiceDesc for UTXO service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var UTXO_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "UTXO",
	HandlerType: (*UTXOServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListByAddress",
			Handler:    _UTXO_ListByAddress_Handler,
		},
		{
			MethodName: "GetBlockHeight",
			Handler:    _UTXO_GetBlockHeight_Handler,
		},
		{
			MethodName: "TotalAmountByAddress",
			Handler:    _UTXO_TotalAmountByAddress_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api/grpc/proto/utxo.proto",
}
