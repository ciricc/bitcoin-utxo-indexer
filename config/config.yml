name: "BitcoinUTXOIndexer"
version: "0.0.0"
environment: "dev"

blockchainParams:
  decimals: 8

blockchainState:
  path: '/home/ciricc/.bitcoin/chainstate'

chainstateMigration:
  batchSize: 5000

blockchainNode:
  # The URL of the Bitcoin Core node REST interface
  restURL: http://localhost:19001/rest

blockchainBlocksIterator:
  # How much headers we can store in memory
  # The more we store, the faster we can iterate over the blockchain
  # by downloading blocks in parallel
  blockHeadersBufferSize: 64 

  # How much blocks we can request from the Bitcoin Core node at once
  # The more we request, the faster we can iterate over the blockchain
  # But it also increases thej memory usage on the bitcoin node side and the network traffic usage
  concurrentBlocksDownloadLimit: 32 

scanner:
  enabled: true 
  state:
    # From which block we should start scanning the blockchain if there is no state in the Redis
    startFromBlockHash: 000000000019d6689c085ae165831e934ff763ae46a2a6c172b3f1b60a8ce26f 
    
utxo:
  snapshot:
    filePath: /home/ciricc/.bitocin/utxo.snapshot

  service:
    grpc:
      address: localhost:50051

  storage:
    inMemory:
      persistenceFilePath: /var/lib/utxostore_inmemory/store.gob

    leveldb:
      path: /var/lib/utxostore

    # Redis storage configration for the scanner state
    redis:
      host: localhost:6379
      db: 0
      # username: utxo
      # password: fEcONJORtFAr
